apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-query-ingress
  namespace: orders
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # Use the appropriate ClusterIssuer
spec:
  rules:
  - host: "quacker.eu"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: jaeger-query
            port:
              number: 80
  tls:  # Enable TLS/SSL for this ingress
  - hosts:
    - "quacker.eu"
    secretName: quacker-eu-tls  # Kubernetes secret to store the certificate
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: mreider@gmail.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: traefik
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: orders
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:latest
        ports:
        - containerPort: 16686
        - containerPort: 4317
        env:
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: orders
  labels:
    app: jaeger
spec:
  type: NodePort
  ports:
    - name: query-http
      port: 80
      protocol: TCP
      targetPort: 16686
  selector:
    app: jaeger
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: orders
  labels:
    app: jaeger
spec:
  ports:
  - name: collector-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  selector:
    app: jaeger
